package com.spukmk2me.spukmk2mesceneeditor.gui;

import java.awt.Dialog;
import javax.swing.JDialog;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.ListSelectionEvent;

import com.spukmk2me.video.IVideoDriver;
import com.spukmk2me.video.IImageResource;
import com.spukmk2me.video.ISubImage;
import com.spukmk2me.optional.scene.ResourceManager;

public class ImageDialog_AddImage extends JDialog    
{
    public ImageDialog_AddImage( ResourceManager manager,
        IVideoDriver vdriver, Dialog parent, boolean modal )
    {
        super( parent, modal );
        initComponents();
        m_manager = manager;
        m_vdriver = vdriver;
        Initialise();
    }

    private void Initialise()
    {
        DefaultListModel model = new DefaultListModel();

        int n = m_manager.GetNumberOfResources(
            ResourceManager.RT_IMAGERESOURCE );

        for ( int i = 0; i != n; ++i )
        {
            model.addElement( m_manager.GetResource(
                i, ResourceManager.RT_IMAGERESOURCE ).GetCreationData().
                    c_proxyName );
        }

        m_resourceList.setModel( model );
        m_resourceList.setSelectionMode( ListSelectionModel.SINGLE_SELECTION );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_resourceList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        m_xTextField = new javax.swing.JTextField();
        m_yTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        m_rotTextField = new javax.swing.JTextField();
        m_vFlipCheckbox = new javax.swing.JCheckBox();
        m_hFlipCheckbox = new javax.swing.JCheckBox();
        m_wTextField = new javax.swing.JTextField();
        m_hTextField = new javax.swing.JTextField();
        m_addButton = new javax.swing.JButton();
        m_cancelButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        m_proxyTextField = new javax.swing.JTextField();
        m_batchCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Resources:");

        m_resourceList.setModel( new DefaultListModel() );
        m_resourceList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                m_resourceListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(m_resourceList);

        jLabel2.setText("X:");

        jLabel3.setText("Y:");

        jLabel4.setText("W:");

        jLabel5.setText("H:");

        jLabel6.setText("Rotation degree:");

        m_vFlipCheckbox.setText("VF");

        m_hFlipCheckbox.setText("HF");

        m_addButton.setText("Add");
        m_addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_addButtonActionPerformed(evt);
            }
        });

        m_cancelButton.setText("Cancel");
        m_cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cancelButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Proxy name:");

        m_batchCheckbox.setText("Batch");
        m_batchCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_batchCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(m_xTextField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(m_yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(m_wTextField)
                                    .addComponent(m_hTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(m_proxyTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(m_vFlipCheckbox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(m_hFlipCheckbox)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(m_batchCheckbox)
                                    .addComponent(m_rotTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)))))
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(m_cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_addButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(m_xTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(m_wTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(m_yTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(m_hTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(m_rotTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(m_hFlipCheckbox)
                                .addComponent(m_batchCheckbox))
                            .addComponent(m_vFlipCheckbox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(m_proxyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_addButton)
                    .addComponent(m_cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cancelButtonActionPerformed

        this.dispose();
    }//GEN-LAST:event_m_cancelButtonActionPerformed

    private void m_addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_addButtonActionPerformed

        int imgResIndex = m_resourceList.getSelectedIndex();
        
        if ( imgResIndex == -1 )
            return;

        IImageResource res = (IImageResource)m_manager.GetResource(
            imgResIndex, ResourceManager.RT_IMAGERESOURCE );
        int     nW, nH, nImg;
        short   x0, y0, imgWidth, imgHeight;

        try
        {
            imgWidth    = Short.parseShort( m_wTextField.getText() );
            imgHeight   = Short.parseShort( m_hTextField.getText() );
        } catch ( NumberFormatException e ) {
            JOptionPane.showMessageDialog( this, "Numerical error" );
            return;
        }

        if ( m_batchCheckbox.isSelected() )
        {
            x0 = y0 = (short)0;

            nW = res.GetWidth() / imgWidth;
            nH = res.GetHeight() / imgHeight;
        }
        else
        {
            try
            {
                x0 = Short.parseShort( m_xTextField.getText() );
                y0 = Short.parseShort( m_yTextField.getText() );
            } catch ( NumberFormatException e ) {
                JOptionPane.showMessageDialog( this, "Numerical error" );
                return;
            }

            nW = ( x0 + imgWidth <= res.GetWidth() )? 1 : 0;
            nH = ( x0 + imgHeight <= res.GetHeight() )? 1 : 0;
        }

        nImg = nW * nH;

        if ( nImg == 0 )
        {
            JOptionPane.showMessageDialog( this,
                "Number of cropped image is zero." );
        }

        String proxyName = m_proxyTextField.getText();

        if ( proxyName == null )
        {
            JOptionPane.showMessageDialog( this,
                "Proxy name cannot be null." );
            return;
        }
        else if ( proxyName.length() == 0 )
        {
            JOptionPane.showMessageDialog( this,
                "Proxy name is empty." );
            return;
        }
        else // Check proxy name(s) for duplication
        {
            boolean duplicated = false;

            if ( (nW == 1) && (nH == 1) )
            {
                duplicated = m_manager.GetResource(
                    proxyName, ResourceManager.RT_IMAGE ) != null;
            }
            else
            {
                for ( int i = 0; i != nImg; ++i )
                {
                    if ( m_manager.GetResource(
                        proxyName + i, ResourceManager.RT_IMAGE ) != null )
                    {
                        duplicated = true;
                        break;
                    }
                }
            }

            if ( duplicated )
            {
                JOptionPane.showMessageDialog( this,
                    "Duplicated proxy name." );
                return;
            }
        }

        // Create sub images

        int     rotationDegree;
        short   x, y;
        byte    flippingFlags;

        rotationDegree =
            (int)Float.parseFloat( m_rotTextField.getText() ) * (2 << 16);

        flippingFlags = 0;

        if ( m_vFlipCheckbox.isSelected() )
            flippingFlags |= IVideoDriver.FLIP_VERTICAL;

        if ( m_hFlipCheckbox.isSelected() )
            flippingFlags |= IVideoDriver.FLIP_HORIZONTAL;

        y = y0;

        int counter = 0;
        boolean singleName = (nW == 1) && (nH == 1);
        
        for ( int i = 0; i != nH; ++i )
        {
            x = x0;

            for ( int j = 0; j != nW; ++j )
            {
                ISubImage image = m_vdriver.CreateSubImage(
                    (IImageResource)m_manager.GetResource(
                        imgResIndex, ResourceManager.RT_IMAGERESOURCE ),
                    x, y, imgWidth, imgHeight, rotationDegree, flippingFlags );
                ISubImage.SubImageCreationData creationData =
                    image.new SubImageCreationData();

                creationData.c_x = x;
                creationData.c_y = y;
                creationData.c_width = imgWidth;
                creationData.c_height = imgHeight;
                creationData.c_rotationDegree = rotationDegree;
                // creationData.c_imageResIndex = ///;
                creationData.c_flippingFlags = flippingFlags;
                creationData.c_resource = res;

                if ( singleName )
                    creationData.c_proxyName = proxyName;
                else
                    creationData.c_proxyName = proxyName + counter;

                ++counter;

                image.SetCreationData( creationData );
                m_manager.AddResource( image, ResourceManager.RT_IMAGE );
                
                x += imgWidth;
            }

            y += imgHeight;
        }

        this.dispose();
    }//GEN-LAST:event_m_addButtonActionPerformed

    private void m_batchCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_batchCheckboxActionPerformed
        boolean enable = !m_batchCheckbox.isSelected();

        m_xTextField.setEnabled( enable );
        m_yTextField.setEnabled( enable );
    }//GEN-LAST:event_m_batchCheckboxActionPerformed

    private void m_resourceListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_m_resourceListValueChanged
        int index = m_resourceList.getSelectedIndex();
        IImageResource resource = (IImageResource)m_manager.GetResource(
            index, ResourceManager.RT_IMAGERESOURCE );

        m_xTextField.setText( "0" );
        m_yTextField.setText( "0" );
        m_wTextField.setText( String.valueOf( resource.GetWidth() ) );
        m_hTextField.setText( String.valueOf( resource.GetHeight() ) );
        m_rotTextField.setText( "0.0" );
        m_proxyTextField.setText( resource.GetCreationData().c_proxyName );
    }//GEN-LAST:event_m_resourceListValueChanged

    private IVideoDriver    m_vdriver;
    private ResourceManager m_manager;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton m_addButton;
    private javax.swing.JCheckBox m_batchCheckbox;
    private javax.swing.JButton m_cancelButton;
    private javax.swing.JCheckBox m_hFlipCheckbox;
    private javax.swing.JTextField m_hTextField;
    private javax.swing.JTextField m_proxyTextField;
    private javax.swing.JList m_resourceList;
    private javax.swing.JTextField m_rotTextField;
    private javax.swing.JCheckBox m_vFlipCheckbox;
    private javax.swing.JTextField m_wTextField;
    private javax.swing.JTextField m_xTextField;
    private javax.swing.JTextField m_yTextField;
    // End of variables declaration//GEN-END:variables
}
