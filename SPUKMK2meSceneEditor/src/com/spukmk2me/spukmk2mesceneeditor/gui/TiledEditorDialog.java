package com.spukmk2me.spukmk2mesceneeditor.gui;

import com.spukmk2me.scene.TiledLayerSceneNode;

public class TiledEditorDialog extends javax.swing.JDialog
{
    public TiledEditorDialog( java.awt.Frame parent, boolean modal,
        TiledLayerSceneNode editedNode )
    {
        super(parent, modal);
        initComponents();
        m_node = editedNode;
        assembleComponents();
    }

    private void assembleComponents()
    {
        TiledEditorMainCanvas   mainCanvas      = new TiledEditorMainCanvas();
        TiledEditorImageCanvas  imageCanvas     = new TiledEditorImageCanvas();
        TiledEditorSpriteCanvas spriteCanvas    =
            new TiledEditorSpriteCanvas();
        TiledEditorInputHander  inputHandler    = new TiledEditorInputHander();
        TiledLayerSceneNode.TiledLayerSceneNodeInfoData info =
            (TiledLayerSceneNode.TiledLayerSceneNodeInfoData)m_node.c_infoData;

        m_screenScrollPane.setViewportView( mainCanvas );
        m_imageScrollPane.setViewportView( imageCanvas );
        m_spriteScrollPane.setViewportView( spriteCanvas );

        mainCanvas.setNode( m_node );
        imageCanvas.setNode( m_node );

        inputHandler.setup( mainCanvas, imageCanvas, spriteCanvas,
            mainCanvas.getCursorNode(), imageCanvas.getCursorNode(),
            null, mainCanvas.getEditedData(), info );

        this.addKeyListener( inputHandler );
        mainCanvas.setFocusable( true );
        mainCanvas.addKeyListener( inputHandler );
        imageCanvas.setFocusable( true );
        imageCanvas.addKeyListener( inputHandler );
        //mainCanvas.addMouseListener( inputHandler );
        //imageCanvas.addMouseListener( inputHandler );

        m_mainCanvas    = mainCanvas;
        m_inputHandler  = inputHandler;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_screenScrollPane = new javax.swing.JScrollPane();
        m_imageScrollPane = new javax.swing.JScrollPane();
        m_spriteScrollPane = new javax.swing.JScrollPane();
        m_okButton = new javax.swing.JButton();
        m_cancelButton = new javax.swing.JButton();
        m_gridCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Tiled editor");

        m_okButton.setText("OK");
        m_okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_okButtonActionPerformed(evt);
            }
        });

        m_cancelButton.setText("Cancel");
        m_cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_cancelButtonActionPerformed(evt);
            }
        });

        m_gridCheckbox.setText("Display grid");
        m_gridCheckbox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                m_gridCheckboxStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(m_screenScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_gridCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(m_cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_okButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(m_imageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m_spriteScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m_screenScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_gridCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(m_imageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(m_spriteScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_okButton)
                    .addComponent(m_cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_m_cancelButtonActionPerformed

    private void m_gridCheckboxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_m_gridCheckboxStateChanged
        m_mainCanvas.setGridVisible( m_gridCheckbox.isSelected() );
    }//GEN-LAST:event_m_gridCheckboxStateChanged

    private void m_okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_okButtonActionPerformed
        TiledLayerSceneNode.TiledLayerSceneNodeInfoData info =
            (TiledLayerSceneNode.TiledLayerSceneNodeInfoData)m_node.c_infoData;
        
        info.c_terrainData = m_mainCanvas.getEditedData();
        m_node.SetupTiledLayer( info.c_images, info.c_sprites,
            info.c_spriteSpeed, info.c_terrainData,
            info.c_tableWidth, info.c_tableHeight, info.c_stepX, info.c_stepY );
        this.dispose();
    }//GEN-LAST:event_m_okButtonActionPerformed

    private TiledLayerSceneNode m_node;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton m_cancelButton;
    private javax.swing.JCheckBox m_gridCheckbox;
    private javax.swing.JScrollPane m_imageScrollPane;
    private javax.swing.JButton m_okButton;
    private javax.swing.JScrollPane m_screenScrollPane;
    private javax.swing.JScrollPane m_spriteScrollPane;
    // End of variables declaration//GEN-END:variables

    private TiledEditorMainCanvas   m_mainCanvas;
    private TiledEditorInputHander  m_inputHandler;
}
